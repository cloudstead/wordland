#!/bin/bash

SCRIPT_DIR=$(cd $(dirname ${SCRIPT}) && pwd)
. ${SCRIPT_DIR}/_wl_base

function wl_auth {
  USERNAME="${1}"
  ASK_TO_SIGNUP="${2:-Y}"
  OPTIONAL=""
  if [[ ${ASK_TO_SIGNUP} == "Y" || ${ASK_TO_SIGNUP} == "y" ]] ; then
    OPTIONAL=" $(translate_message label_optional)"
  fi

  if [[ -z "${USERNAME}" || ( ${ASK_TO_SIGNUP} == "Y" || ${ASK_TO_SIGNUP} == "y" ) ]] ; then

    response=$(curl --silent --write-out "\n%{http_code}\n" ${WL_API}/auth)
    status_code=$(echo "$response" | sed -n '$p')
    json=$(echo "$response" | sed '$d')

    if [ -z "${status_code}" ] ; then
      die "$(translate_message err_api_checkingSession): ${json}"
    fi
    if [ ${status_code} -eq 200 ] ; then
      echo "${json}" > ${SESSION_JSON}
      return
    elif [[ ${status_code} -eq 404 || -z "${USERNAME}" ]] ; then
      echo -n "$(translate_message label_username)${OPTIONAL}: "
      read USERNAME
    else
      die "$(translate_message err_api_checkingSession): ${status_code} / ${json}"
    fi
  fi
  if [[ -z "${USERNAME}" && ( -z "${ASK_TO_SIGNUP}" || ${ASK_TO_SIGNUP} == "N" || ${ASK_TO_SIGNUP} == "n" ) ]] ; then
    die "$(translate_message err_username_required)"
  fi

  echo -n "$(translate_message label_email)${OPTIONAL}: "
  read EMAIL

  if [[ -z "${EMAIL}" && ( -z "${ASK_TO_SIGNUP}" || ${ASK_TO_SIGNUP} == "N" || ${ASK_TO_SIGNUP} == "n" ) ]] ; then
    die "$(translate_message err_email_required)"
  fi

  if [[ ! -z "${EMAIL}" ]] ; then
    if [[ -z "${ASK_TO_SIGNUP}" || ${ASK_TO_SIGNUP} == "$(translate_message Y)" ]] ; then
      echo -n "$(translate_message msg_wantToSignUp) "
      read SIGN_UP
    else
      SIGN_UP="$(translate_message Y)"
    fi
    if [[ $(is_yes "${SIGN_UP}") == "true" ]] ; then
      # Yes, sign up for an account with email
      echo -n "$(translate_message label_password): "
      read -s PASSWORD
      SECRETS=""
      if [ ! -z ${SKIP_CAPTCHA_SECRET} ] ; then
        SECRETS='{ "name": "'${SKIP_CAPTCHA_SECRET}'", "value": "'${SKIP_CAPTCHA_SECERT}'" }'
      fi
      response=$(curl --header "Content-Type: application/json" --silent --write-out "\n%{http_code}\n" -X POST -d '{"username": "'${USERNAME}'", "email": "'${EMAIL}'", "password": "'${PASSWORD}'", "secrets": [ '"${SECRETS}"' ]}' ${WL_API}/auth/register)
      status_code=$(echo "${response}" | sed -n '$p')
      json=$(echo "${response}" | sed '$d')
      if [[ ${status_code} -ne 200 ]] ; then
        die "$(translate_message err_api_registration): ${json}"
      fi
      echo "${json}" > ${SESSION_JSON}

    else
      # No don't sign up, use anonymous account with email
      response=$(curl --header "Content-Type: application/json" --silent --write-out "\n%{http_code}\n" -X POST -d '{"username": "'${USERNAME}'", "email": "'${EMAIL}'"}' ${WL_API}/auth/register)
      status_code=$(echo "${response}" | sed -n '$p')
      json=$(echo "${response}" | sed '$d')
      if [[ ${status_code} -ne 200 ]] ; then
        die "$(translate_message err_api_login): ${status_code} / ${json}"
      fi
      echo "${json}" > ${SESSION_JSON}
    fi
  else
    # Can't sign up without email, use anonymous account with username, or no username (one will be assigned)
    response=$(curl --header "Content-Type: application/json" --silent --write-out "\n%{http_code}\n" -X POST -d '{"name": "'${USERNAME}'"}' ${WL_API}/auth/login)
    status_code=$(echo "${response}" | sed -n '$p')
    json=$(echo "${response}" | sed '$d')
    if [[ ${status_code} -ne 200 ]] ; then
      die "$(translate_message err_api_login): ${status_code} / ${json}"
    fi
    echo "${json}" > ${SESSION_JSON}
  fi

}

if [[ ! -f ${SESSION_JSON} && $(basename $0) != "wl_sign_up" && $(basename $0) != "wl_whoami" ]] ; then
  wl_auth "${__no_value__}" "Y"
#else
#  echo "not signing in (already have session, or command that does not require session)..."
fi

if [[ -f "${SESSION_JSON}" ]] ; then
  SESSION_ID="$(session_apiToken)"
  if [[ -z ${SESSION_ID} ]] ; then
    die "$(translate_message err_api_noSessionId): ${SESSION_JSON}"
  fi
  SESSION_TOKEN="${WL_API_KEY}: ${SESSION_ID}"
fi
