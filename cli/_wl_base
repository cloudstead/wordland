#!/bin/bash

ENV_FILE="${HOME}/.wordland.env"

WL_DIR="${HOME}/.wordland"
SESSION_JSON="${WL_DIR}/session.json"
CURRENT_ROOM=${WL_DIR}/current_room

DEFAULT_API="http://127.0.0.1:9091/api"
WL_API_KEY="x-wordland-api-key"

function die {
  if [[ -z "${SCRIPT}" ]] ; then
    echo 1>&2 "${1}"
  else
    echo 1>&2 "${SCRIPT}: ${1}"
  fi
  exit 1
}

function error {
  RED='\033[38;5;9m'
  NC='\033[0m' # No Color
  echo 1>&2 -e "\n${RED}${@}${NC}"
}

function env_val {
  param="${1}"
  cat ${ENV_FILE} | grep "export ${param}=" | awk -F '=' '{print $2}'
}

function json_node {
  echo "${1}" | jq .${2}
}
function json_val {
  json_node "${1}" "${2}" | tr -d '" '
}
function session_val {
  if [[ -f ${SESSION_JSON} ]] ; then
    json_val "$(cat ${SESSION_JSON})" "${1}"
  fi
}
function session_player {
  session_val id
}
function session_apiToken {
  session_val apiToken
}
function session_name {
  session_val name
}
function session_email {
  session_val email
}

function wl_get {
  SESSION_TOKEN="${1}"
  URL="${2}"
  FAIL_ON_EMPTY_RESPONSE="${3:-N}"
  ERR_MESSAGE="${4:-error}"

  response=$(curl --silent --write-out "\n%{http_code}\n" --header "${SESSION_TOKEN}" ${URL})
  status_code=$(echo "${response}" | sed -n '$p')
  json=$(echo "${response}" | sed '$d')
  if [ -z "${status_code}" ] ; then
    die "${ERR_MESSAGE}: ${json}"
  fi
  if [[ ${status_code} -eq 200 && ( ! -z "${json}" || ${FAIL_ON_EMPTY_RESPONSE} != "Y"  ) ]] ; then
    echo "${json}"
  else
    die "${ERR_MESSAGE}: ${status_code} / ${json}"
  fi
}

function wl_post {
  SESSION_TOKEN="${1}"
  URL="${2}"
  DATA="${3}"
  OUTFILE="${4:-/dev/null}"
  ERR_MESSAGE="${5:-error}"

  response=$(echo "${DATA}" | curl --silent --write-out "\n%{http_code}\n" --header "Content-Type: application/json" --header "${SESSION_TOKEN}" -X POST -d @- ${URL})
  status_code=$(echo "${response}" | sed -n '$p')
  json=$(echo "${response}" | sed '$d' | tee ${OUTFILE})
  if [ -z "${status_code}" ] ; then
    die "${ERR_MESSAGE}: ${json}"
  fi
  if [[ ${status_code} -eq 200 && ! -z "${json}" ]] ; then
    echo "${json}"
  else
    die "${ERR_MESSAGE}: ${status_code} / ${json}"
  fi
}

if [ -f ${ENV_FILE} ] ; then
  . ${ENV_FILE}
fi

if [ -z "${WL_API}" ] ; then
  #die "no WL_API defined"
  #echo "No WL_API defined, using default ${DEFAULT_API}"
  WL_API="${DEFAULT_API}"
fi

# check API availability
response=$(curl --silent --write-out "\n%{http_code}\n" ${WL_API}/auth/ping)
status_code=$(echo "${response}" | sed -n '$p')
if [[ -z "${status_code}" || ${status_code} -ne 200 ]] ; then
  die "wordland server unavailable: ${WL_API}"
fi
