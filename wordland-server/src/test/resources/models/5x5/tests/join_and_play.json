[
  {
    "comment": "list available rooms, forbidden",
    "request": { "uri": "rooms" },
    "response": {
      "status": 403
    }
  },

  {
    "comment": "login as anonymous player 1",
    "request": { "uri": "auth/login", "method": "post" },
    "response": {
      "sessionName": "player1",
      "session": "apiToken"
    }
  },

  {
    "comment": "list available rooms",
    "request": { "uri": "rooms" },
    "response": {
      "store": "rooms",
      "check": [
        {"condition": "json.length >= 1"},
        {"condition": "find(json, 'name', '5x5') != null"}
      ]
    }
  },

  {
    "comment": "join room",
    "request": {
      "uri": "rooms/5x5/join",
      "entity": {
        "name": "Joe Smith"
      }
    },
    "response": {
      "store": "p1room",
      "check": [
        {"condition": "json.player.name == 'Joe Smith'"},
        {"condition": "json.room.startsWith('5x5_')"},
        {"condition": "json.room != '5x5'"}
      ]
    }
  },

  {
    "comment": "player1 requests board state",
    "request": {
      "uri": "rooms/{{p1room.room}}/board"
    },
    "response": {
      "store": "board"
    }
  },

  {
    "comment": "login as anonymous player 2",
    "request": {
      "session": "new",
      "method": "post",
      "uri": "auth/login"
    },
    "response": {
      "sessionName": "player2",
      "session": "apiToken"
    }
  },

  {
    "comment": "player 2 joins game, verify same room",
    "request": {
      "session": "player2",
      "uri": "rooms/5x5/join",
      "entity": {
        "name": "Steve Johnson"
      }
    },
    "response": {
      "store": "p2room",
      "check": [
        {"condition": "json.player.name == 'Steve Johnson'"},
        {"condition": "json.room == p1room.room"}
      ]
    }
  },

  {
    "comment": "player2 plays word, fails because it's not their turn",
    "before": "find-word-and-tiles board word1",
    "request": {
      "session": "player2",
      "uri": "rooms/{{p2room.room}}/play",
      "entity": {
        "room": "{{p2room.room}}",
        "stateChange": "word_played",
        "id": "{{p2room.player.id}}",
        "clientId": "{{p2room.player.id}}",
        "apiToken": "{{p2room.player.apiToken}}",
        "word": "{{word1.word}}",
        "tilesJson": "{{escaped_json word1.tiles}}"
      }
    },
    "response": {
      "status": 422,
      "check": [
        {"condition": "json.has('err.game.notYourTurn')"}
      ]
    }
  },

  {
    "comment": "player1 plays word, verify score",
    "before": "find-word-and-tiles board word1",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/play",
      "entity": {
        "room": "{{p1room.room}}",
        "stateChange": "word_played",
        "id": "{{p1room.player.id}}",
        "clientId": "{{p1room.player.id}}",
        "apiToken": "{{p1room.player.apiToken}}",
        "word": "{{word1.word}}",
        "tilesJson": "{{escaped_json word1.tiles}}"
      }
    },
    "response": {
      "store": "p1play1",
      "check": [
        {"condition": "json.stateChange == 'word_played'"},
        {"condition": "json.object.get('id').textValue() == '{{p1room.player.id}}'"},
        {"condition": "json.object.get('score').get('total').intValue() > 0"},
        {"condition": "json.object.get('score').get('total').intValue() < 20"}
      ]
    }
  },

  {
    "comment": "player1 tries to play another word, fails because it's not their turn",
    "before": "find-word-and-tiles board word2",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/play",
      "entity": {
        "room": "{{p1room.room}}",
        "stateChange": "word_played",
        "id": "{{p1room.player.id}}",
        "clientId": "{{p1room.player.id}}",
        "apiToken": "{{p1room.player.apiToken}}",
        "word": "{{word2.word}}",
        "tilesJson": "{{escaped_json word2.tiles}}"
      }
    },
    "response": {
      "status": 422,
      "check": [
        {"condition": "json.has('err.game.notYourTurn')"}
      ]
    }
  },

  {
    "comment": "player1 requests board state, verify updates",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/board"
    },
    "response": {
      "store": "board",
      "check": [
        {"condition": "json.claimedWord('{{word1.word}}')"}
      ]
    }
  },

  {
    "comment": "player 2 requests board state, verify updates",
    "request": {
      "session": "player2",
      "uri": "rooms/{{p2room.room}}/board"
    },
    "response": {
      "store": "board",
      "check": [
        {"condition": "json.claimedWord('{{word1.word}}')"}
      ]
    }
  },

  {
    "comment": "player 2 requests scoreboard, verify player1 score",
    "request": {
      "session": "player2",
      "uri": "rooms/{{p2room.room}}/scoreboard"
    },
    "response": {
      "store": "scoreboard1",
      "check": [
        {"condition": "json.length == 1"},
        {"condition": "json[0].id == '{{p1room.player.id}}'"},
        {"condition": "json[0].name == '{{p1room.player.name}}'"},
        {"condition": "json[0].score == {{json p1play1.object}}.score.total"}
      ]
    }
  },

  {
    "comment": "player2 plays word, verify score",
    "before": "find-word-and-tiles board word3",
    "request": {
      "session": "player2",
      "uri": "rooms/{{p2room.room}}/play",
      "entity": {
        "room": "{{p2room.room}}",
        "stateChange": "word_played",
        "id": "{{p2room.player.id}}",
        "clientId": "{{p2room.player.id}}",
        "apiToken": "{{p2room.player.apiToken}}",
        "word": "{{word3.word}}",
        "tilesJson": "{{escaped_json word3.tiles}}"
      }
    },
    "response": {
      "store": "p2play1",
      "check": [
        {"condition": "json.stateChange == 'word_played'"},
        {"condition": "json.object.get('id').textValue() == '{{p2room.player.id}}'"},
        {"condition": "json.object.get('score').get('total').intValue() > 0"},
        {"condition": "json.object.get('score').get('total').intValue() < 20"}
      ]
    }
  },

  {
    "comment": "player1 plays another word",
    "before": "find-word-and-tiles board word4",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/play",
      "entity": {
        "room": "{{p1room.room}}",
        "stateChange": "word_played",
        "id": "{{p1room.player.id}}",
        "clientId": "{{p1room.player.id}}",
        "apiToken": "{{p1room.player.apiToken}}",
        "word": "{{word4.word}}",
        "tilesJson": "{{escaped_json word4.tiles}}"
      }
    }
  },

  {
    "comment": "player 1 requests scoreboard, verify player1 score is higher and player2 now has a score",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/scoreboard"
    },
    "response": {
      "store": "scoreboard2",
      "check": [
        {"condition": "json.length == 2"},
        {"condition": "find(json, 'id', '{{p1room.player.id}}') != null"},
        {"condition": "find(json, 'id', '{{p2room.player.id}}') != null"},
        {"condition": "find(scoreboard2, 'id', '{{p1room.player.id}}').score > find(scoreboard1, 'id', '{{p1room.player.id}}').score"},
        {"condition": "find(scoreboard2, 'id', '{{p2room.player.id}}').score == {{json p2play1.object}}.score.total"}
      ]
    }
  },

  {
    "comment": "player 1 quit game",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/quit",
      "entity": {
        "room": "{{p1room.room}}",
        "stateChange": "player_left",
        "id": "{{p1room.player.id}}",
        "clientId": "{{p1room.player.id}}",
        "apiToken": "{{p1room.player.apiToken}}"
      }
    },
    "response": {
      "status": 200
    }
  },

  {
    "comment": "player 2 quit game",
    "request": {
      "session": "player2",
      "uri": "rooms/{{p1room.room}}/quit",
      "entity": {
        "room": "{{p2room.room}}",
        "stateChange": "player_left",
        "id": "{{p2room.player.id}}",
        "clientId": "{{p2room.player.id}}",
        "apiToken": "{{p2room.player.apiToken}}"
      }
    },
    "response": {
      "status": 200
    }
  },

  {
    "comment": "player 2 requests more board state, succeeds",
    "request": {
      "session": "player2",
      "uri": "rooms/{{p1room.room}}/board"
    },
    "response": {
      "store": "board",
      "check": [
        {"condition": "json.claimedWord('{{word1.word}}')"}
      ]
    }
  }
]