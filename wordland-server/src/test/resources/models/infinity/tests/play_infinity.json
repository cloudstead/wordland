[
  {
    "comment": "login as anonymous player 1",
    "request": {
      "uri": "auth/login",
      "entity": {"name": "player1"}
    },
    "response": {
      "store": "player1",
      "sessionName": "player1",
      "session": "apiToken"
    }
  },

  {
    "comment": "join infinity board as player1",
    "request": {
      "session": "player1",
      "uri": "rooms/the_expanse/join",
      "entity": {}
    },
    "response": {
      "store": "p1room",
      "check": [
        {"condition": "json.player.name == 'player1'"},
        {"condition": "json.room.startsWith('the_expanse')"}
      ]
    }
  },

  {
    "comment": "login as anonymous player 2",
    "request": {
      "session": "new",
      "uri": "auth/login",
      "entity": {"name": "player2"}
    },
    "response": {
      "store": "player2",
      "sessionName": "player2",
      "session": "apiToken"
    }
  },

  {
    "comment": "join infinity board as player2, ensure same room",
    "request": {
      "session": "player2",
      "uri": "rooms/the_expanse/join",
      "entity": {
        "name": "player2"
      }
    },
    "response": {
      "store": "p2room",
      "check": [
        {"condition": "json.player.name == 'player2'"},
        {"condition": "json.room == p1room.room"}
      ]
    }
  },

  {
    "comment": "player 1 requests initial board state",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/board"
    },
    "response": {
      "store": "initial_board",
      "check": [
        {"condition": "json.x1 == 0"},
        {"condition": "json.x2 == 31"},
        {"condition": "json.y1 == 0"},
        {"condition": "json.y2 == 31"},
        {"condition": "json.tiles.length == 32"},
        {"condition": "json.tiles[0].length == 32"},
        {"condition": "json.tiles[0][0].unclaimed()"},
        {"condition": "json.tiles[0][1].unclaimed()"},
        {"condition": "json.tiles[0][2].unclaimed()"},
        {"condition": "json.tiles[2][0].unclaimed()"},
        {"condition": "json.tiles[3][0].unclaimed()"},
        {"condition": "json.tiles[4][5].unclaimed()"}
      ]
    }
  },

  {
    "comment": "player 1 requests board state, requires 4 game state blocks",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/board?x1=-5&x2=5&y1=-5&y2=5"
    },
    "response": {
      "check": [
        {"condition": "json.x1 == -5"},
        {"condition": "json.x2 == 5"},
        {"condition": "json.y1 == -5"},
        {"condition": "json.y2 == 5"},
        {"condition": "json.tiles.length == 11"},
        {"condition": "json.tiles[0].length == 11"},
        {"condition": "json.tiles[0][0].unclaimed()"},
        {"condition": "json.tiles[0][1].unclaimed()"},
        {"condition": "json.tiles[0][2].unclaimed()"},
        {"condition": "json.tiles[2][0].unclaimed()"},
        {"condition": "json.tiles[3][0].unclaimed()"},
        // ensure alignment with view of initial board state
        {"condition": "json.tiles[5][5].symbol == initial_board.tiles[0][0].symbol"},
        {"condition": "json.tiles[10][10].symbol == initial_board.tiles[5][5].symbol"},
        {"condition": "json.tiles[10][9].symbol == initial_board.tiles[5][4].symbol"}
      ]
    }
  },

  {
    "comment": "player 1 requests board state for large random area, server limits to 50x50",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/board?x1=-128&x2=109&y1=-132&y2=128"
    },
    "response": {
      "store": "big_board",
      "check": [
        {"condition": "json.tiles.length == 50"},
        {"condition": "json.tiles[0].length == 50"},
        {"condition": "json.tiles[0][0].unclaimed()"},
        {"condition": "json.tiles[0][1].unclaimed()"},
        {"condition": "json.tiles[0][2].unclaimed()"},
        {"condition": "json.tiles[49][49].unclaimed()"}
      ]
    }
  },

  {
    "comment": "player 1 plays word",
    "before": "find-word-and-tiles big_board player1_word1",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/play",
      "entity": {
        "room": "{{p1room.room}}",
        "stateChange": "word_played",
        "id": "{{player1.id}}",
        "clientId": "{{player1.id}}",
        "apiToken": "{{player1.apiToken}}",
        "word": "{{player1_word1.word}}",
        "tilesJson": "{{escaped_json player1_word1.tiles}}"
      }
    }
  },

  {
    "comment": "player 2 plays word",
    "before": "find-word-and-tiles big_board player2_word1",
    "request": {
      "session": "player2",
      "uri": "rooms/{{p1room.room}}/play",
      "entity": {
        "room": "{{p1room.room}}",
        "stateChange": "word_played",
        "id": "{{player2.id}}",
        "clientId": "{{player2.id}}",
        "apiToken": "{{player2.apiToken}}",
        "word": "{{player2_word1.word}}",
        "tilesJson": "{{escaped_json player2_word1.tiles}}"
      }
    }
  },

  {
    "comment": "player 1 requests more board state, verify updates",
    "request": {
      "uri": "rooms/{{p1room.room}}/board?x1=-128&x2=109&y1=-132&y2=128"
    },
    "response": {
      "store": "big_board",
      "check": [
        {"condition": "json.tiles.length == 50"},
        {"condition": "json.claimedWord('{{player1_word1.word}}')"},
        {"condition": "json.claimedWord('{{player1_word2.word}}')"}
      ]

    }
  },

  {
    "comment": "player 1 requests board overview for large area",
    "request": {
      "session": "player1",
      "uri": "rooms/{{p1room.room}}/board/view.png?x1=-1000&x2=1000&y1=-1000&y2=1000&height=600&width=800"
    },
    "after": "save-board-view /tmp/views/{{date_format 'now' 'yyyy-MM-dd_HH-mm'}}.png"
  }/*,

    {
      "comment": "restart server, player 1 requests board state, verify API call succeeds and all plays are there"
    }*/
]